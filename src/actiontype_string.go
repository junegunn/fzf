// Code generated by "stringer -type=actionType"; DO NOT EDIT.

package fzf

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[actIgnore-0]
	_ = x[actStart-1]
	_ = x[actClick-2]
	_ = x[actInvalid-3]
	_ = x[actChar-4]
	_ = x[actMouse-5]
	_ = x[actBeginningOfLine-6]
	_ = x[actAbort-7]
	_ = x[actAccept-8]
	_ = x[actAcceptNonEmpty-9]
	_ = x[actAcceptOrPrintQuery-10]
	_ = x[actBackwardChar-11]
	_ = x[actBackwardDeleteChar-12]
	_ = x[actBackwardDeleteCharEof-13]
	_ = x[actBackwardWord-14]
	_ = x[actBackwardSubWord-15]
	_ = x[actCancel-16]
	_ = x[actChangeBorderLabel-17]
	_ = x[actChangeHeader-18]
	_ = x[actChangeMulti-19]
	_ = x[actChangePreviewLabel-20]
	_ = x[actChangePrompt-21]
	_ = x[actChangeQuery-22]
	_ = x[actClearScreen-23]
	_ = x[actClearQuery-24]
	_ = x[actClearSelection-25]
	_ = x[actClose-26]
	_ = x[actDeleteChar-27]
	_ = x[actDeleteCharEof-28]
	_ = x[actEndOfLine-29]
	_ = x[actFatal-30]
	_ = x[actForwardChar-31]
	_ = x[actForwardWord-32]
	_ = x[actForwardSubWord-33]
	_ = x[actKillLine-34]
	_ = x[actKillWord-35]
	_ = x[actKillSubWord-36]
	_ = x[actUnixLineDiscard-37]
	_ = x[actUnixWordRubout-38]
	_ = x[actYank-39]
	_ = x[actBackwardKillWord-40]
	_ = x[actBackwardKillSubWord-41]
	_ = x[actSelectAll-42]
	_ = x[actDeselectAll-43]
	_ = x[actToggle-44]
	_ = x[actToggleSearch-45]
	_ = x[actToggleAll-46]
	_ = x[actToggleDown-47]
	_ = x[actToggleUp-48]
	_ = x[actToggleIn-49]
	_ = x[actToggleOut-50]
	_ = x[actToggleTrack-51]
	_ = x[actToggleTrackCurrent-52]
	_ = x[actToggleHeader-53]
	_ = x[actToggleWrap-54]
	_ = x[actTrackCurrent-55]
	_ = x[actUntrackCurrent-56]
	_ = x[actDown-57]
	_ = x[actUp-58]
	_ = x[actPageUp-59]
	_ = x[actPageDown-60]
	_ = x[actPosition-61]
	_ = x[actHalfPageUp-62]
	_ = x[actHalfPageDown-63]
	_ = x[actOffsetUp-64]
	_ = x[actOffsetDown-65]
	_ = x[actOffsetMiddle-66]
	_ = x[actJump-67]
	_ = x[actJumpAccept-68]
	_ = x[actPrintQuery-69]
	_ = x[actRefreshPreview-70]
	_ = x[actReplaceQuery-71]
	_ = x[actToggleSort-72]
	_ = x[actShowPreview-73]
	_ = x[actHidePreview-74]
	_ = x[actTogglePreview-75]
	_ = x[actTogglePreviewWrap-76]
	_ = x[actTransform-77]
	_ = x[actTransformBorderLabel-78]
	_ = x[actTransformHeader-79]
	_ = x[actTransformPreviewLabel-80]
	_ = x[actTransformPrompt-81]
	_ = x[actTransformQuery-82]
	_ = x[actPreview-83]
	_ = x[actChangePreview-84]
	_ = x[actChangePreviewWindow-85]
	_ = x[actPreviewTop-86]
	_ = x[actPreviewBottom-87]
	_ = x[actPreviewUp-88]
	_ = x[actPreviewDown-89]
	_ = x[actPreviewPageUp-90]
	_ = x[actPreviewPageDown-91]
	_ = x[actPreviewHalfPageUp-92]
	_ = x[actPreviewHalfPageDown-93]
	_ = x[actPrevHistory-94]
	_ = x[actPrevSelected-95]
	_ = x[actPrint-96]
	_ = x[actPut-97]
	_ = x[actNextHistory-98]
	_ = x[actNextSelected-99]
	_ = x[actExecute-100]
	_ = x[actExecuteSilent-101]
	_ = x[actExecuteMulti-102]
	_ = x[actSigStop-103]
	_ = x[actFirst-104]
	_ = x[actLast-105]
	_ = x[actReload-106]
	_ = x[actReloadSync-107]
	_ = x[actDisableSearch-108]
	_ = x[actEnableSearch-109]
	_ = x[actSelect-110]
	_ = x[actDeselect-111]
	_ = x[actUnbind-112]
	_ = x[actRebind-113]
	_ = x[actBecome-114]
	_ = x[actShowHeader-115]
	_ = x[actHideHeader-116]
}

const _actionType_name = "actIgnoreactStartactClickactInvalidactCharactMouseactBeginningOfLineactAbortactAcceptactAcceptNonEmptyactAcceptOrPrintQueryactBackwardCharactBackwardDeleteCharactBackwardDeleteCharEofactBackwardWordactBackwardSubWordactCancelactChangeBorderLabelactChangeHeaderactChangeMultiactChangePreviewLabelactChangePromptactChangeQueryactClearScreenactClearQueryactClearSelectionactCloseactDeleteCharactDeleteCharEofactEndOfLineactFatalactForwardCharactForwardWordactForwardSubWordactKillLineactKillWordactKillSubWordactUnixLineDiscardactUnixWordRuboutactYankactBackwardKillWordactBackwardKillSubWordactSelectAllactDeselectAllactToggleactToggleSearchactToggleAllactToggleDownactToggleUpactToggleInactToggleOutactToggleTrackactToggleTrackCurrentactToggleHeaderactToggleWrapactTrackCurrentactUntrackCurrentactDownactUpactPageUpactPageDownactPositionactHalfPageUpactHalfPageDownactOffsetUpactOffsetDownactOffsetMiddleactJumpactJumpAcceptactPrintQueryactRefreshPreviewactReplaceQueryactToggleSortactShowPreviewactHidePreviewactTogglePreviewactTogglePreviewWrapactTransformactTransformBorderLabelactTransformHeaderactTransformPreviewLabelactTransformPromptactTransformQueryactPreviewactChangePreviewactChangePreviewWindowactPreviewTopactPreviewBottomactPreviewUpactPreviewDownactPreviewPageUpactPreviewPageDownactPreviewHalfPageUpactPreviewHalfPageDownactPrevHistoryactPrevSelectedactPrintactPutactNextHistoryactNextSelectedactExecuteactExecuteSilentactExecuteMultiactSigStopactFirstactLastactReloadactReloadSyncactDisableSearchactEnableSearchactSelectactDeselectactUnbindactRebindactBecomeactShowHeaderactHideHeader"

var _actionType_index = [...]uint16{0, 9, 17, 25, 35, 42, 50, 68, 76, 85, 102, 123, 138, 159, 183, 198, 216, 225, 245, 260, 274, 295, 310, 324, 338, 351, 368, 376, 389, 405, 417, 425, 439, 453, 470, 481, 492, 506, 524, 541, 548, 567, 589, 601, 615, 624, 639, 651, 664, 675, 686, 698, 712, 733, 748, 761, 776, 793, 800, 805, 814, 825, 836, 849, 864, 875, 888, 903, 910, 923, 936, 953, 968, 981, 995, 1009, 1025, 1045, 1057, 1080, 1098, 1122, 1140, 1157, 1167, 1183, 1205, 1218, 1234, 1246, 1260, 1276, 1294, 1314, 1336, 1350, 1365, 1373, 1379, 1393, 1408, 1418, 1434, 1449, 1459, 1467, 1474, 1483, 1496, 1512, 1527, 1536, 1547, 1556, 1565, 1574, 1587, 1600}

func (i actionType) String() string {
	if i < 0 || i >= actionType(len(_actionType_index)-1) {
		return "actionType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _actionType_name[_actionType_index[i]:_actionType_index[i+1]]
}
